# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: NBM CI with Maven

#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    #inputs:
      #name:
        # Friendly description to be shown in the UI instead of 'name'
        #description: 'Person to greet'
        # Default value if no value is explicitly provided
        #default: 'World'
        # Input has to be provided for the workflow to run
        #required: false

jobs:
  build:

    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        #Maven Publish to Github
        #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        #settings-path: ${{ github.workspace }} # location for the settings.xml file
        #Maven Publish to Central
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Set Version
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dproject.version=next.version -Dexpression=next.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Build with RELEASE150
      run: mvn -B package -Dnetbeans.release.version=RELEASE150 -Dnext.version=RELEASE150-${{ env.RELEASE_VERSION }} --file pom.xml

    - name: Build with RELEASE160
      run: mvn -B package -Dnetbeans.release.version=RELEASE160 -Dnext.version=RELEASE160-${{ env.RELEASE_VERSION }} --file pom.xml

    - name: Build with RELEASE170
      run: mvn -B package -Dnetbeans.release.version=RELEASE170 -Dnext.version=RELEASE170-${{ env.RELEASE_VERSION }} --file pom.xml

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ github.event.repository.name }} ${{ env.RELEASE_VERSION }}
        tag_name: ${{ env.RELEASE_VERSION }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Attach RELEASE150 NBM
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/nbm/python-RELEASE150-${{ env.RELEASE_VERSION }}.nbm
        asset_name: python-RELEASE150-${{ env.RELEASE_VERSION }}.nbm
        asset_content_type: application/gzip
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Attach RELEASE160 NBM
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/nbm/python-RELEASE160-${{ env.RELEASE_VERSION }}.nbm
        asset_name: python-RELEASE160-${{ env.RELEASE_VERSION }}.nbm
        asset_content_type: application/gzip
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Attach RELEASE170 NBM
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/nbm/python-RELEASE170-${{ env.RELEASE_VERSION }}.nbm
        asset_name: python-RELEASE170-${{ env.RELEASE_VERSION }}.nbm
        asset_content_type: application/gzip
      env:
        GITHUB_TOKEN: ${{ github.token }}

    #- name: Publish to GitHub Packages Apache Maven
    #  run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #  env:
    #    GITHUB_TOKEN: ${{ github.token }}
    - name: Publish package RELEASE150
      run: mvn --batch-mode deploy:deploy-file -Durl=file://${{ env.GITHUB_WORKSPACE }}/target/nbm/python-RELEASE150-${{ env.RELEASE_VERSION }}.nbm -DrepositoryId=ossrh -Dfile=target/nbm/python-RELEASE150-${{ env.RELEASE_VERSION }}.nbm -Dversion=python-RELEASE150-${{ env.RELEASE_VERSION }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

    - name: Publish package RELEASE160
      run: mvn --batch-mode deploy:deploy-file -Durl=file://${{ env.GITHUB_WORKSPACE }}/target/nbm/python-RELEASE160-${{ env.RELEASE_VERSION }}.nbm -DrepositoryId=ossrh -Dfile=target/nbm/python-RELEASE160-${{ env.RELEASE_VERSION }}.nbm -Dversion=python-RELEASE160-${{ env.RELEASE_VERSION }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

    - name: Publish package RELEASE170
      run: mvn --batch-mode deploy:deploy-file -Durl=file://${{ env.GITHUB_WORKSPACE }}/target/nbm/python-RELEASE170-${{ env.RELEASE_VERSION }}.nbm -DrepositoryId=ossrh -Dfile=target/nbm/python-RELEASE170-${{ env.RELEASE_VERSION }}.nbm -Dversion=python-RELEASE170-${{ env.RELEASE_VERSION }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
